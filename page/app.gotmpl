{{ define "header" }}
  <select
    hx-on:change="onChangeTracker(this.options[this.selectedIndex].text)"
    class="max-w-xs rounded border-slate-200 font-semibold"
  >
    {{ range .SessionUser.Trackers }}
      <option
        {{ if eq .TrackerName $.Tracker.TrackerName }}selected{{ end }}
        value="{{ .TrackerName }}"
      >
        {{ .TrackerName }}
      </option>
    {{ end }}
  </select>

  <nav class="flex items-baseline">
    <a
      href="/create-tracker/"
      class="w-10 rounded p-2 text-center text-slate-400 hover:bg-slate-100 hover:text-slate-800"
      >＋</a
    >
    <a
      href="/settings/"
      class="rounded p-2 text-center font-semibold text-slate-400 hover:bg-slate-100 hover:text-slate-800"
      >Settings</a
    >
  </nav>
{{ end }}

{{ define "main" }}
  <div class="flex flex-col justify-center gap-8">
    {{ if .Tracker.Description }}
      <section class="left-0">
        <p class="mx-auto w-fit max-w-sm">{{ .Tracker.Description }}</p>
      </section>
    {{ end }}
    <section class="grid grid-cols-[auto_max-content] justify-center">
      {{ range $y := .Tracker.Entries.Years }}
        <div class="col-span-2 grid grid-cols-subgrid gap-x-8">
          {{ range $i, $m := $y.Months }}
            <div class="group col-span-2 grid grid-cols-subgrid items-center">
              <time
                datetime="{{ $y.String }}-{{ .Val }}"
                class="font-semibold text-slate-300 group-hover:text-slate-600"
              >
                {{ .String }}
              </time>
              <div
                class="{{ if ne (index .Days 0).Weekday 1 -}}
                  -mb-7
                {{- end }} grid grid-cols-7"
              >
                {{ range $i, $e :=  .Days }}
                  <time
                    id="day-{{ .String }}"
                    datetime="{{ .String }}"
                    hx-get="/template/app/day/?tracker={{ $.Tracker.TrackerName }}&date={{ .String }}"
                    class="group/day z-10 flex h-7 w-7 items-center justify-center"
                    hx-trigger="update-day-{{ .String }}"
                    style="grid-column-start: {{ .Weekday }};grid-row-start: -{{ .Week }};"
                  >
                    {{ template "day" dict "tracker" $.Tracker "day" $e }}
                  </time>
                {{ end }}
              </div>
            </div>
          {{ end }}
        </div>
      {{ end }}
    </section>
  </div>

  <dialog id="day-detail" class="w-96 rounded p-4">
    <div class="flex flex-col gap-2">
      <div class="flex flex-col">
        <div class="flex justify-between text-slate-600">
          <h1 class="font-bold">
            {{ .Tracker.TrackerName }}
          </h1>
          <button
            class="cursor-pointer font-semibold"
            hx-on:click="document.getElementById('day-detail').close();document.getElementById('ep').classList.add('hidden')"
          >
            ✖️
          </button>
        </div>
        <time
          id="day-detail-time"
          class="text-sm font-semibold text-slate-400"
          datetime=""
        >
        </time>
      </div>
      <div class="flex items-baseline gap-2">
        <input
          readonly
          id="emoji"
          name="emoji"
          type="text"
          value=""
          class="w-10 cursor-pointer rounded border-slate-300 bg-slate-100 p-2 text-center focus:bg-white focus:outline-none"
          hx-on:click="document.getElementById('ep').classList.remove('hidden')"
        />
        <span class="text-slate-400">(emoji of the day)</span>
      </div>
      <emoji-picker
        hx-on:emoji-click="document.getElementById('emoji').value = event.detail.unicode;document.getElementById('ep').classList.add('hidden')"
        id="ep"
        class="hidden w-full"
      ></emoji-picker>
      <input
        autofocus
        id="content"
        type="text"
        name="content"
        value=""
        placeholder="Notes about today's activities..."
        class="rounded border-slate-400 bg-slate-100 p-2 placeholder-slate-300 focus:bg-white"
      />
      <button
        hx-on:click="updateDayDetail()"
        class="cursor-pointer rounded bg-indigo-600 p-2 font-semibold text-white"
      >
        Save
      </button>
    </div>
  </dialog>
  <div
    class="hidden"
    id="tracker"
    data-tracker="{{ .Tracker.TrackerName }}"
  ></div>
  <div
    class="hidden"
    id="username"
    data-username="{{ .SessionUser.Username }}"
  ></div>
  <script>
    const tracker = document.getElementById("tracker").dataset.tracker;
    const username = document.getElementById("username").dataset.username;
    const dayDetail = document.getElementById("day-detail");
    const dayDetailTime = document.getElementById("day-detail-time");
    const inputEmoji = document.getElementById("emoji");
    const inputContent = document.getElementById("content");
    let currentDate = "";

    async function getDayDetail(tracker, date) {
      try {
        const res = await fetch(
          "/day-detail/?" +
            new URLSearchParams({ tracker: tracker, date: date }),
        );
        const { emoji, content } = await res.json();
        inputEmoji.value = emoji;
        inputContent.value = content;
        currentDate = date;
        dayDetailTime.replaceChildren(date);
        dayDetail.showModal();
      } catch (err) {
        alert("Something went wrong.");
        console.error(err);
      }
    }

    async function updateDayDetail() {
      const formData = new FormData();
      formData.set("tracker", tracker);
      formData.set("date", currentDate);
      formData.set("emoji", inputEmoji.value);
      formData.set("content", inputContent.value);

      const res = await fetch("/day-detail/", {
        method: "PUT",
        body: formData,
      });
      htmx.trigger(`#day-${currentDate}`, `update-day-${currentDate}`);
      dayDetail.close();
    }

    function onChangeTracker(tracker) {
      window.location.href = `/${username}/${tracker}/`;
    }
  </script>
{{ end }}
