{{ define "body" }}
  <header class="sticky top-0 z-30 flex items-center bg-white p-4">
    <a href="/">
      {{ template "logo" dict "class" "size-7 text-eigengrau-900" }}
    </a>
    <a href="/examples/" class="ml-4 hover:underline">Examples</a>
    <a
      href="/create-tracker/"
      class="ml-auto flex items-center justify-center rounded-xl p-2 text-eigengrau-500 hover:bg-eigengrau-50"
    >
      {{ template "icon-plus" dict "class" "size-5 text-eigengrau-500" }}
    </a>
    <a
      href="/settings/"
      class="flex items-center justify-center rounded-xl p-2 text-eigengrau-500 hover:bg-eigengrau-50"
    >
      {{ template "icon-user" dict "class" "size-5 text-eigengrau-500" }}
    </a>
  </header>
  <main class="flex justify-center py-4">
    <nav class="flex max-w-prose flex-col gap-2">
      <h1 class="ml-11 flex items-center gap-2 text-sm text-eigengrau-700">
        Your Trackers
      </h1>
      <ul class="flex flex-col gap-4">
        {{ range $ti, $t := .sessionUser.Trackers }}
          <li class="group flex gap-2">
            <div
              class="invisible flex h-full w-5 items-center text-eigengrau-700 group-hover:visible"
            >
              {{ template "icon-bars-3" dict "class" "size-5 text-eigengrau-500" }}
            </div>
            <div
              class="relative flex flex-1 flex-col gap-2 rounded-xl border border-eigengrau-100 p-4 group-hover:border-eigengrau-300"
            >
              <h2 class="font-semibold">
                {{ .DisplayName }}
              </h2>
              <a
                href="/{{ .Slug }}/settings/"
                class="absolute right-3 top-3 hidden group-hover:block"
              >
                {{ template "icon-cog-6-tooth" dict "class" "size-5 text-eigengrau-500" }}
              </a>
              <div class="grid grid-cols-[auto_auto] justify-items-start gap-2">
                <h3 class="flex items-center gap-1 text-sm text-slate-500">
                  {{ template "icon-sun" dict "class" "size-5 text-eigengrau-300" }}
                  Today
                </h3>
                <div class="flex items-center justify-center gap-1">
                  {{ range $i, $d := (index $.daysArr $t.Slug) }}
                    {{ if eq $i 1 }}
                      {{ template "day" dict "slug" $t.Slug "day" $d }}
                    {{ end }}
                  {{ end }}
                  <span class="text-sm text-eigengrau-500">
                    (Not Logged Yet)
                  </span>
                </div>
                <h3 class="flex items-center gap-1 text-sm text-slate-500">
                  {{ template "icon-clock" dict "class" "size-5 text-eigengrau-300" }}
                  Past 7 Days
                </h3>
                <div class="flex gap-1">
                  {{ range $i, $d := (index $.daysArr $t.Slug) }}
                    {{ template "day" dict "slug" $t.Slug "day" $d }}
                  {{ end }}
                </div>
              </div>
            </div>
          </li>
        {{ end }}
      </ul>
    </nav>
  </main>
  <script type="module">
    feather.replace();

    document.addEventListener("alpine:init", () => {
      Alpine.store("emojiPicker", {
        selected: false,
      });
    });

    async function getDayDetail(slug, date) {
      try {
        const res = await fetch(
          "/day-detail/?" + new URLSearchParams({ slug: slug, date: date }),
        );
        const { emoji, content } = await res.json();
        inputEmoji.value = emoji;
        if (emoji !== "") {
          Alpine.store("emojiPicker").selected = true;
        } else {
          Alpine.store("emojiPicker").selected = false;
        }

        inputContent.value = content;
        currentDate = date;
        dayDetailTime.replaceChildren(date);
        dayDetail.showModal();
      } catch (err) {
        alert("Something went wrong.");
        console.error(err);
      }
    }
  </script>
{{ end }}
